documentation:
  api:
    info:
      version: ${file(package.json):version}
      title: SecureVote convenience API
      description: >
        An API provided for convenient functions via SecureVote.
        This includes fee-less voting and other such functions.

        While these operations aren't as trustless as interacting with a chain directly,
        they do provide very fast verifiability (by checking the txid, etc) and allow for
        a few features that cannot be done without 3rd parites.
      termsOfService: https://secure.vote
      contact:
        name: Max Kaye
        url: https://secure.vote
        email: max@secure.vote
      license:
        name: None
        url: http://secure.vote
  resources:
    - path: "sv/light/submitProxyVote"
      description: "Submit a proxy vote here"
  models:
    - name: ErrTy
      contentType: application/json
      schema:
        type: string
          # - "null"
    - name: HexString
      contentType: 'application/json'
      schema:
        type: string
      example: "0xdeadbeef1337"
    - name: TXID
      contentType: 'application/json'
      schema:
        type: string
    - name: ProxyVoteInput
      description: An object composed of the signed vote and metadata about which democracy and ballot it is for.
      contentType: application/json
      schema:
        type: object
        properties:
          signedVote:
            $ref: '{{model: HexString}}'
          democHash:
            $ref: '{{model: HexString}}'
          ballotId:
            $ref: '{{model: HexString}}'
        required:
          - signedVote
          - democHash
          - ballotId
    - name: TextResponse
      contentType: application/json
      schema:
        type: object
        properties:
          err:
            $ref: '{{model: ErrTy}}'
          val:
            type: string
        required:
          - err
          - val
    - name: TxidResponse
      contentType: application/json
      schema:
        type: object
        properties:
          err:
            $ref: '{{model: ErrTy}}'
          val:
            $ref: '{{model: TXID}}'
        required:
          - err
          - val
    - name: HexResponse
      contentType: application/json
      schema:
        type: object
        properties:
          err:
            $ref: '{{model: ErrTy}}'
          val:
            $ref: '{{model: HexString}}'
        required:
          - err
          - val
    - name: ObjectResponse
      contentType: application/json
      schema:
        type: object
        properties:
          err:
            $ref: '{{model: ErrTy}}'
          val:
            type: object
          ty:
            type: string
        required:
          - err
          - val
          - ty
docFrags:
  GoodTextResp:
    statusCode: 200
    responseModels:
      "application/json": TextResponse
  GoodObjResp:
    statusCode: 200
    responseModels:
      "application/json": ObjectResponse
